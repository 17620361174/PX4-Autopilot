name: Metadata

on:
  push:
    branches:
    - 'develop'
    - 'release/*'

jobs:

  airframe:
    runs-on: ubuntu-latest
    container: px4io/px4-dev-base-focal:2020-04-01
    steps:
    - uses: actions/checkout@v1
    - name: disable the keychain credential helper
      run: git config --global credential.helper ""
    - name: enable the local store credential helper
      run: git config --global --add credential.helper store
    - name: add credential
      run: echo "https://x-access-token:${{ secrets.ACCESS_TOKEN }}@github.com" >> ~/.git-credentials
    - name: tell git to use https instead of ssh whenever it encounters it
      run: 'git config --global url."https://github.com/".insteadof git@github.com:'
    - name: get submodules
      run: 'git submodule update --init --recursive'

    - name: airframe metadata
      run: |
        make airframe_metadata
        cd build/px4_sitl_default/docs
        ls -ls *
      # TODO: deploy to devguide gitbook and s3

  module:
    runs-on: ubuntu-latest
    container: px4io/px4-dev-base-focal:2020-04-01
    steps:
    - uses: actions/checkout@v1
    - name: disable the keychain credential helper
      run: git config --global credential.helper ""
    - name: enable the local store credential helper
      run: git config --global --add credential.helper store
    - name: add credential
      run: echo "https://x-access-token:${{ secrets.ACCESS_TOKEN }}@github.com" >> ~/.git-credentials
    - name: tell git to use https instead of ssh whenever it encounters it
      run: 'git config --global url."https://github.com/".insteadof git@github.com:'
    - name: get submodules
      run: 'git submodule update --init --recursive'

    - name: module documentation
      run: |
        make module_documentation
        cd build/px4_sitl_default/docs
        ls -ls *
      # TODO: deploy to devguide gitbook and s3

  parameter:
    runs-on: ubuntu-latest
    container: px4io/px4-dev-base-focal:2020-04-01
    steps:
    - uses: actions/checkout@v1
    - name: disable the keychain credential helper
      run: git config --global credential.helper ""
    - name: enable the local store credential helper
      run: git config --global --add credential.helper store
    - name: add credential
      run: echo "https://x-access-token:${{ secrets.ACCESS_TOKEN }}@github.com" >> ~/.git-credentials
    - name: tell git to use https instead of ssh whenever it encounters it
      run: 'git config --global url."https://github.com/".insteadof git@github.com:'
    - name: get submodules
      run: 'git submodule update --init --recursive'

    - name: parameter metadata
      run: |
        make parameters_metadata
        cd build/px4_sitl_default/docs
        ls -ls *
      # TODO: deploy 'parameters.md, parameters.xml to S3 px4-travis:Firmware/master/


  micrortps_agent:
    runs-on: ubuntu-latest
    container: px4io/px4-dev-base-bionic:2020-11-12
    steps:
    - uses: actions/checkout@v1
    - name: disable the keychain credential helper
      run: git config --global credential.helper ""
    - name: enable the local store credential helper
      run: git config --global --add credential.helper store
    - name: add credential
      run: echo "https://x-access-token:${{ secrets.ACCESS_TOKEN }}@github.com" >> ~/.git-credentials
    - name: tell git to use https instead of ssh whenever it encounters it
      run: 'git config --global url."https://github.com/".insteadof git@github.com:'
    - name: get submodules
      run: 'git submodule update --init --recursive'
    - name: microRTPS agent deploy
      run: |
        make px4_sitl_rtps
        git config --global user.name "auterion-ci"
        git config --global user.email "ci@auterion.com"
        git clone https://auterion-ci:${{ secrets.ACCESS_TOKEN }}@github.com/Auterion/micrortps_agent.git
        cd micrortps_agent
        git fetch
        if git rev-parse --verify origin/${GITHUB_REF##*/}; then git checkout ${GITHUB_REF##*/}; else git checkout -b ${GITHUB_REF##*/}; fi
        cp -R ../build/px4_sitl_rtps/src/modules/micrortps_bridge/micrortps_agent/* .
        git status
        git add src
        git commit -a -m "Update microRTPS agent source code `date`" || true
        git add idl
        git commit -a -m "Update IDL definitions `date`" || true
        git add CMakeLists.txt
        git commit -a -m "Update CMakeLists.txt `date`" || true
        git push -u origin HEAD:${GITHUB_REF##*/} || true
        cd ..
        rm -rf micrortps_agent

  system_monitord:
    runs-on: ubuntu-latest
    container: px4io/px4-dev-base-bionic:2020-11-12
    steps:
    - uses: actions/checkout@v1
    - name: disable the keychain credential helper
      run: git config --global credential.helper ""
    - name: enable the local store credential helper
      run: git config --global --add credential.helper store
    - name: add credential
      run: echo "https://x-access-token:${{ secrets.ACCESS_TOKEN }}@github.com" >> ~/.git-credentials
    - name: tell git to use https instead of ssh whenever it encounters it
      run: 'git config --global url."https://github.com/".insteadof git@github.com:'
    - name: get submodules
      run: 'git submodule update --init --recursive'
    - name: system_monitord RTPS code deploy
      run: |
        sed -i -e 's/  - msg: onboard_computer_status/  - msg: onboard_computer_status\n    send: true/' msg/tools/uorb_rtps_message_ids.yaml
        make px4_sitl_rtps
        git config --global user.name "auterion-ci"
        git config --global user.email "ci@auterion.com"
        git clone https://auterion-ci:${{ secrets.ACCESS_TOKEN }}@github.com/Auterion/system_monitord.git
        cd system_monitord
        git fetch
        if git rev-parse --verify origin/${GITHUB_REF##*/}; then git checkout ${GITHUB_REF##*/}; else git checkout -b ${GITHUB_REF##*/}; fi
        cp -R ../build/px4_sitl_rtps/src/modules/micrortps_bridge/micrortps_agent/src/onboard_computer_status*.cpp src/rtps/
        cp -R ../build/px4_sitl_rtps/src/modules/micrortps_bridge/micrortps_agent/src/onboard_computer_status*.h include/rtps/
        git status
        git add .
        git commit -a -m "Update onboard_computer_status RTPS source code `date`" || true
        git push -u origin HEAD:${GITHUB_REF##*/} || true
        cd ..
        rm -rf system_monitord

  ROS_msgs:
    runs-on: ubuntu-latest
    container: px4io/px4-dev-base-bionic:2020-11-12
    steps:
    - uses: actions/checkout@v1
    - name: disable the keychain credential helper
      run: git config --global credential.helper ""
    - name: enable the local store credential helper
      run: git config --global --add credential.helper store
    - name: add credential
      run: echo "https://x-access-token:${{ secrets.ACCESS_TOKEN }}@github.com" >> ~/.git-credentials
    - name: tell git to use https instead of ssh whenever it encounters it
      run: 'git config --global url."https://github.com/".insteadof git@github.com:'
    - name: PX4 ROS msgs (px4_msgs) deploy
      run: |
        git clone https://auterion-ci:${{ secrets.ACCESS_TOKEN }}@github.com/Auterion/px4_msgs.git
        git config --global user.name "auterion-ci"
        git config --global user.email "ci@auterion.com"
        cd px4_msgs
        git fetch
        if git rev-parse --verify origin/${GITHUB_REF##*/}; then git checkout ${GITHUB_REF##*/}; else git checkout -b ${GITHUB_REF##*/}; fi
        python3 ../msg/tools/uorb_to_ros_msgs.py ../msg/ msg/
        git status
        git add .
        git commit -a -m "Update message definitions `date`" || true
        git push -u origin HEAD:${GITHUB_REF##*/} || true
        cd ..
        rm -rf px4_msgs

  ROS2_bridge:
    runs-on: ubuntu-latest
    container: px4io/px4-dev-base-bionic:2020-11-12
    steps:
    - uses: actions/checkout@v1
    - name: disable the keychain credential helper
      run: git config --global credential.helper ""
    - name: enable the local store credential helper
      run: git config --global --add credential.helper store
    - name: add credential
      run: echo "https://x-access-token:${{ secrets.ACCESS_TOKEN }}@github.com" >> ~/.git-credentials
    - name: tell git to use https instead of ssh whenever it encounters it
      run: 'git config --global url."https://github.com/".insteadof git@github.com:'
    - name: PX4 ROS2 bridge (px4_ros_com) deploy
      run: |
        git clone https://auterion-ci:${{ secrets.ACCESS_TOKEN }}@github.com/Auterion/px4_ros_com.git
        git config --global user.name "auterion-ci"
        git config --global user.email "ci@auterion.com"
        cd px4_ros_com
        git fetch
        if git rev-parse --verify origin/${GITHUB_REF##*/}; then git checkout ${GITHUB_REF##*/}; else git checkout -b ${GITHUB_REF##*/}; fi
        python3 ../msg/tools/uorb_to_ros_rtps_ids.py -i ../msg/tools/uorb_rtps_message_ids.yaml -o templates/uorb_rtps_message_ids.yaml
        git status
        git add .
        git commit -a -m "Update uORB RTPS ID map `date`" || true
        git push origin HEAD:${GITHUB_REF##*/} || true
        cd ..
        cp msg/tools/uorb_rtps_classifier.py px4_ros_com/scripts/uorb_rtps_classifier.py
        cp msg/tools/generate_microRTPS_bridge.py px4_ros_com/scripts/generate_microRTPS_bridge.py
        cp msg/tools/px_generate_uorb_topic_files.py px4_ros_com/scripts/px_generate_uorb_topic_files.py
        cp msg/tools/px_generate_uorb_topic_helper.py px4_ros_com/scripts/px_generate_uorb_topic_helper.py
        cd px4_ros_com
        git status
        git add .
        git commit -a -m "Update uORB RTPS code generation tools `date`" || true
        git push origin HEAD:${GITHUB_REF##*/} || true
        cd ..
        cp msg/templates/urtps/microRTPS_agent.cpp.em px4_ros_com/templates/microRTPS_agent.cpp.em
        cp msg/templates/urtps/microRTPS_timesync.cpp.em px4_ros_com/templates/microRTPS_timesync.cpp.em
        cp msg/templates/urtps/microRTPS_timesync.h.em px4_ros_com/templates/microRTPS_timesync.h.em
        cp msg/templates/urtps/microRTPS_transport.cpp px4_ros_com/templates/microRTPS_transport.cpp
        cp msg/templates/urtps/microRTPS_transport.h px4_ros_com/templates/microRTPS_transport.h
        cp msg/templates/urtps/Publisher.cpp.em px4_ros_com/templates/Publisher.cpp.em
        cp msg/templates/urtps/Publisher.h.em px4_ros_com/templates/Publisher.h.em
        cp msg/templates/urtps/Subscriber.cpp.em px4_ros_com/templates/Subscriber.cpp.em
        cp msg/templates/urtps/Subscriber.h.em px4_ros_com/templates/Subscriber.h.em
        cp msg/templates/urtps/RtpsTopics.cpp.em px4_ros_com/templates/RtpsTopics.cpp.em
        cp msg/templates/urtps/RtpsTopics.h.em px4_ros_com/templates/RtpsTopics.h.em
        cd px4_ros_com
        git status
        git add .
        git commit -a -m "Update uORB RTPS templats `date`" || true
        git push origin HEAD:${GITHUB_REF##*/} || true
        cd ..
        rm -rf px4_ros_com
